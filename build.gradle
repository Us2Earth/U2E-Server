plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'org.sonarqube' version '7.0.1.6134'
}

group = 'Konkuk'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

sonarqube {
	properties {
		property "sonar.projectKey", "Us2Earth_U2E-Server"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.organization", "Us2Earth"
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.coverage.jacoco.xmlReportPaths",
				layout.buildDirectory.file("reports/test/jacocoTestReport.xml")
						.get().asFile.absolutePath
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//	jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
	testImplementation 'io.rest-assured:spring-mock-mvc:5.4.0'
	testImplementation 'org.mockito:mockito-core:5.12.0'
	testImplementation 'org.assertj:assertj-core:3.26.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
