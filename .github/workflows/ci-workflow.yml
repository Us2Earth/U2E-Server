name: CI with Gradle & Sonar

on:
  pull_request:
    branches:
      - 'main'
      - 'develop'

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Sonar 분석 정확도 향상 및 PR 데코레이션을 위해 전체 이력 필요

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          cache-read-only: false

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: PR Analysis with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # PR 데코레이션용(자동 제공, Secrets에 별도 추가 불필요)
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # SonarCloud/SonarQube 인증 토큰(Secrets 필요)
        run: |
          ./gradlew clean test jacocoTestReport sonarqube \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }} \
            --info --stacktrace

      - name: Upload JaCoCo HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html
          path: build/reports/test/jacocoTestReportHtml
          if-no-files-found: ignore
