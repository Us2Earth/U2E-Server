name: CI with Gradle & Sonar

on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:
    branches:
      - 'main'
      - 'develop'

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-analyze:
    name: Build, Test, JaCoCo, Sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Sonar 분석 정확도 향상 및 PR 데코레이션을 위해 전체 이력 필요

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/action s/setup-gradle@v4

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        # working-directory: ./U2E  # 서브모듈/하위 디렉터리일 경우 주석 해제 후 경로 지정

      # 테스트 실행 + JaCoCo 리포트 + Sonar 분석
      # - jacocoTestReport는 xml 리포트를 생성해야 하며, build.gradle 설정 필요(아래 3번 참고)
      - name: Build, Test, Coverage, Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # PR 데코레이션용(자동 제공, Secrets에 별도 추가 불필요)
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # SonarCloud/SonarQube 인증 토큰(Secrets 필요)
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # (자체 SonarQube 서버 사용 시 필요)
        run: |
          ./gradlew --version
          ./gradlew clean test jacocoTestReport sonarqube --info --stacktrace
        # working-directory: ./U2E

      - name: Upload JaCoCo HTML report artifact (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html
          path: build/reports/test/jacocoTestReportHtml
          if-no-files-found: ignore
        # working-directory: ./U2E