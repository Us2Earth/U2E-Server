name: CI with Gradle & Sonar

on:
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 1) PR 분석(변경분)
      - name: PR Analysis (diff only)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew clean test jacocoTestReport \
            sonarqube \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }} \
            --info --stacktrace

      # 2) 전체 분석(브랜치) - 전체 코드 스멜/이슈 확인용
      - name: Full Branch Analysis (entire code)
        if: always()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # PR 파라미터가 자동 감지되지 않도록, 필요한 값만 명시
          BRANCH_NAME="pr-${{ github.event.pull_request.number }}-full"
          ./gradlew sonarqube \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.branch.name=${BRANCH_NAME} \
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/test/jacocoTestReport.xml \
            --info --stacktrace

      - name: Upload JaCoCo HTML (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html
          path: build/reports/test/jacocoTestReportHtml
          if-no-files-found: ignore